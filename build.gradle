plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

group = 'cn.jrmcdp'
version = '1.0.4'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url = 'https://repo.papermc.io/repository/maven-public/' }
    maven { url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
    maven { url = 'https://repo.codemc.io/repository/maven-public/' }
    maven { url = 'https://jitpack.io' }
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots' }
}

dependencies {
    compileOnly("com.destroystokyo.paper:paper-api:1.16.5-R0.1-SNAPSHOT")
    compileOnly("com.github.MilkBowl:VaultAPI:1.7")
    compileOnly("me.clip:placeholderapi:2.11.2")
    compileOnly("com.comphenix.protocol:ProtocolLib:4.8.0")

    implementation("com.github.cryptomorin:XSeries:9.4.0")
    implementation("net.kyori:adventure-api:4.15.0")
    implementation("net.kyori:adventure-platform-bukkit:4.3.2")
    implementation("net.kyori:adventure-text-minimessage:4.14.0")
    implementation("net.objecthunter:exp4j:0.4.8")
}
tasks {
    build {
        dependsOn(shadowJar)
    }
    shadowJar {
        from("LICENSE")
        archiveClassifier.set("")
        relocate("com.cryptomorin.xseries", "cn.jrmcdp.craftitem.utils.xseries")
        relocate("net.kyori", "cn.jrmcdp.craftitem.utils.kyori")
        relocate("net.objecthunter.exp4j", "cn.jrmcdp.craftitem.utils.exp4j")

    }
}
def targetJavaVersion = 8
java {
    withSourcesJar()
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from(sourceSets.main.resources.srcDirs) {
        expand('version': version)
        include 'plugin.yml'
    }
}

publishing {
    publications {
        mavenRelease(MavenPublication) {
            from components.java
            groupId = project.group
            artifactId = project.name
            version = project.version
        }
    }
}
